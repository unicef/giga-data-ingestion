jobs:
  - deployment: Deploy
    displayName: Data Ingestion Portal Deployment
    environment: $(kubernetesEnvironment)
    strategy:
      runOnce:
        deploy:
          steps:
            - checkout: self

            - task: HelmDeploy@0
              displayName: Add Bitnami Helm repo
              inputs:
                command: repo
                arguments: add bitnami https://charts.bitnami.com/bitnami
                namespace: $(kubernetesNamespace)

            - task: HelmDeploy@0
              displayName: Helm deploy PostgreSQL
              condition: eq(variables.deployEnv, 'dev')
              inputs:
                command: upgrade
                chartType: Name
                chartName: bitnami/postgresql
                chartVersion: 14.0.5
                releaseName: postgres
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/pg-values.yaml
                arguments: >
                  --set architecture=standalone
                  --set auth.existingSecret="giga-ingestion-portal-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy production-config PostgreSQL
              condition: not(eq(variables.deployEnv, 'dev'))
              inputs:
                command: upgrade
                chartType: Name
                chartName: bitnami/postgresql
                chartVersion: 14.0.5
                releaseName: postgres
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/pg-values.yaml
                arguments: --set auth.existingSecret="giga-ingestion-portal-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy Redis
              condition: eq(variables.deployEnv, 'dev')
              inputs:
                command: upgrade
                chartType: Name
                chartName: bitnami/redis
                chartVersion: 18.18.0
                releaseName: redis
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/redis-values.yaml
                arguments: >
                  --set architecture=standalone
                  --set auth.existingSecret="giga-ingestion-portal-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy production-config Redis
              condition: not(eq(variables.deployEnv, 'dev'))
              inputs:
                command: upgrade
                chartType: Name
                chartName: bitnami/redis
                chartVersion: 18.18.0
                releaseName: redis
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/redis-values.yaml
                arguments: --set auth.existingSecret="giga-ingestion-portal-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy email service
              condition: eq(variables.deployEnv, 'dev')
              inputs:
                command: upgrade
                chartType: FilePath
                chartPath: "$(Build.SourcesDirectory)/infra/helm/email-service"
                releaseName: email-service
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/data-ingestion.values-override.yaml
                arguments: >
                  --set image.repository="$(containerRegistryName).azurecr.io/giga-ingestion-portal-email"
                  --set image.tag="$(Build.SourceVersion)"
                  --set envFrom[1].secretRef.name="giga-ingestion-portal-secrets-$(deployEnv)"
                  --set envFrom[2].secretRef.name="oi-ingestionportal-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy production-config email service
              condition: not(eq(variables.deployEnv, 'dev'))
              inputs:
                command: upgrade
                chartType: FilePath
                chartPath: "$(Build.SourcesDirectory)/infra/helm/email-service"
                releaseName: email-service
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/data-ingestion.values-override.yaml
                arguments: >
                  --values infra/helm/data-ingestion.values-override-prd.yaml
                  --set image.repository="$(containerRegistryName).azurecr.io/giga-ingestion-portal-email"
                  --set image.tag="$(Build.SourceVersion)"
                  --set envFrom[1].secretRef.name="giga-ingestion-portal-secrets-$(deployEnv)"
                  --set envFrom[2].secretRef.name="oi-ingestionportal-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy Ingestion Portal
              condition: eq(variables.deployEnv, 'dev')
              inputs:
                command: upgrade
                chartType: FilePath
                chartPath: "$(Build.SourcesDirectory)/infra/helm/data-ingestion"
                releaseName: ingestion-portal
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/data-ingestion.values-override.yaml
                arguments: >
                  --set image.repository="$(containerRegistryName).azurecr.io/giga-ingestion-portal"
                  --set image.tag="$(Build.SourceVersion)"
                  --set ingress.enabled=true
                  --set ingress.hosts[0].host="io-dataingestion-$(deployEnv).unitst.org"
                  --set ingress.hosts[0].paths[0].path="/"
                  --set ingress.hosts[0].paths[0].pathType=Prefix
                  --set envFrom[1].secretRef.name="giga-ingestion-portal-secrets-$(deployEnv)"
                  --set envFrom[2].secretRef.name="oi-ingestionportal-secrets-$(deployEnv)"

            - task: HelmDeploy@0
              displayName: Helm deploy production-config Ingestion Portal
              condition: not(eq(variables.deployEnv, 'dev'))
              inputs:
                command: upgrade
                chartType: FilePath
                chartPath: "$(Build.SourcesDirectory)/infra/helm/data-ingestion"
                releaseName: ingestion-portal
                namespace: $(kubernetesNamespace)
                valueFile: infra/helm/data-ingestion.values-override.yaml
                arguments: >
                  --values infra/helm/data-ingestion.values-override-prd.yaml
                  --set image.repository="$(containerRegistryName).azurecr.io/giga-ingestion-portal"
                  --set image.tag="$(Build.SourceVersion)"
                  --set ingress.enabled=true
                  --set ingress.hosts[0].host="io-dataingestion-$(deployEnv).unitst.org"
                  --set ingress.hosts[0].paths[0].path="/"
                  --set ingress.hosts[0].paths[0].pathType=Prefix
                  --set envFrom[1].secretRef.name="giga-ingestion-portal-secrets-$(deployEnv)"
                  --set envFrom[2].secretRef.name="oi-ingestionportal-secrets-$(deployEnv)"
