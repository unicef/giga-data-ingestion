"""'add date_key and date_format'

Revision ID: b69e8a49a86f
Revises: 3ae4cebfe253
Create Date: 2024-04-02 11:34:36.167068

"""
from collections.abc import Sequence

import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = "b69e8a49a86f"
down_revision: str | None = "3ae4cebfe253"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    send_date_in_enum = postgresql.ENUM(
        "BODY", "QUERY_PARAMETERS", name="senddateinenum"
    )
    send_date_in_enum.create(op.get_bind())

    op.add_column(
        "qos_school_connectivity", sa.Column("date_key", sa.String(), nullable=True)
    )
    op.add_column(
        "qos_school_connectivity", sa.Column("date_format", sa.String(), nullable=True)
    )
    op.add_column(
        "qos_school_connectivity",
        sa.Column(
            "send_date_in",
            sa.Enum("BODY", "QUERY_PARAMETERS", name="senddateinenum"),
            nullable=True,
        ),
    )
    op.add_column(
        "qos_school_connectivity",
        sa.Column("response_date_key", sa.String(), nullable=False, server_default=""),
    )
    op.add_column(
        "qos_school_connectivity",
        sa.Column(
            "response_date_format",
            sa.String(),
            nullable=False,
            server_default="%Y-%m-%d",
        ),
    )
    op.alter_column("qos_school_connectivity", "response_date_key", server_default=None)
    op.alter_column(
        "qos_school_connectivity", "response_date_format", server_default=None
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column("qos_school_connectivity", "response_date_format")
    op.drop_column("qos_school_connectivity", "response_date_key")
    op.drop_column("qos_school_connectivity", "send_date_in")
    op.drop_column("qos_school_connectivity", "date_format")
    op.drop_column("qos_school_connectivity", "date_key")
    send_date_in_enum = postgresql.ENUM(
        "BODY", "QUERY_PARAMETERS", name="senddateinenum"
    )
    send_date_in_enum.drop(op.get_bind())

    # ### end Alembic commands ###
