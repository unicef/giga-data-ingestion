[tool.poetry]
name = "data-ingestion-backend"
version = "0.2.0"
description = ""
authors = ["Thinking Machines <hello@thinkingmachin.es>"]
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.103.1"
uvicorn = { extras = ["standard"], version = "^0.23.2" }
pydantic = { extras = ["email"], version = "^2.3.0" }
gunicorn = "^21.2.0"
pydantic-settings = "^2.0.3"
itsdangerous = "^2.1.2"
loguru = "^0.7.2"
fastapi-azure-auth = "^4.2.1"
python-multipart = "^0.0.6"
msal = "^1.24.1"
azure-storage-blob = "^12.18.3"
msgraph-sdk = "^1.0.0a16"
orjson = "^3.9.9"
sentry-sdk = { extras = ["fastapi"], version = "^1.35.0" }
country-converter = "^1.2"

[tool.poetry.group.dev.dependencies]
black = "^23.9.1"
isort = "^5.12.0"
flake8 = "^6.1.0"
ipython = "^8.16.1"
pytest = "^7.4.2"
ruff = "^0.1.12"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.ruff]
target-version = "py311"
ignore-init-module-imports = true

[tool.ruff.lint]
select = ["E", "W", "F", "I", "C", "B", "UP"]
ignore = ["E203", "E266", "E501", "E402"]

[tool.ruff.mccabe]
max-complexity = 10

[tool.ruff.lint.flake8-bugbear]
extend-immutable-calls = ["fastapi.Depends", "fastapi.Query"]

[tool.ruff.lint.flake8-builtins]
builtins-ignorelist = ["id"]

[tool.ruff.lint.isort]
combine-as-imports = true
force-wrap-aliases = true

[tool.ruff.lint.pep8-naming]
classmethod-decorators = ["pydantic.validator"]
