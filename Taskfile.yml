version: '3'

dotenv:
  - api/.env
  - ui/.env

env:
  COMMIT_SHA:
    sh: git rev-parse --short HEAD

vars:
  PROJECT_NAME: giga-dataops-platform_ingestion-portal

tasks:
  default:
    desc: Build and start Docker containers
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} up --detach --build --remove-orphans {{.CLI_ARGS}}

  setup:
    desc: Run first-time setup tasks
    cmds:
      - task: setup-pre-commit
      - task: setup-python
      - task: setup-node

  setup-pre-commit:
    internal: true
    desc: Install pre-commit hooks
    cmds:
      - pip install -U pre-commit
      - pre-commit install --install-hooks -t pre-commit -t commit-msg

  setup-python:
    internal: true
    dir: api
    desc: Install Python dependencies
    cmds:
      - poetry env use 3.11
      - poetry install

  setup-node:
    internal: true
    dir: ui
    desc: Install Node dependencies
    cmds:
      - npm install -D

  logs:
    desc: Attach to Docker logs
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} logs --follow {{.CLI_ARGS}}

  stop:
    desc: Stop containers
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} stop {{.CLI_ARGS}}

  restart:
    desc: Restart containers
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} restart {{.CLI_ARGS}}

  exec:
    desc: Run a command in the specified container
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} exec {{.CLI_ARGS}}

  clean:
    desc: Remove containers
    cmds:
      - docker compose --project-name {{.PROJECT_NAME}} down --volumes --remove-orphans {{.CLI_ARGS}}

  test:
    desc: Run unit tests
    dir: api
    cmds:
      - poetry run pytest

  build-and-push:
    desc: Build and push Docker image
    cmds:
      - task: build-cr
      - task: push-cr

  build-cr:
    internal: true
    desc: Build Docker image
    cmds:
      - docker build --tag {{.INGESTION_PORTAL_IMAGE_REPOSITORY}}:{{.COMMIT_SHA}} -f Dockerfile.prod .

  push-cr:
    internal: true
    desc: Push Docker image
    cmds:
      - docker push {{.INGESTION_PORTAL_IMAGE_REPOSITORY}}:{{.COMMIT_SHA}}

  helm-up:
    desc: Install/upgrade Helm chart
    dir: infra
    cmds:
      - kubectl apply -f k8s/secrets.yaml
      - >
        helm upgrade --install ingestion-portal ./helm/data-ingestion
        --set image.repository={{.INGESTION_PORTAL_IMAGE_REPOSITORY}}
        --set image.tag={{.COMMIT_SHA}}
        --set service.type=LoadBalancer

  helm-down:
    desc: Uninstall Helm chart
    dir: infra/helm
    cmds:
      - helm uninstall ingestion-portal
      - kubectl delete all --all
      - kubectl delete pvc --all
